From 1a9c1b37f88e95b528e4574c7930c98703ad3867 Mon Sep 17 00:00:00 2001
From: Aleksei Greshilov <aleksei.greshilov@cern.ch>
Date: Mon, 19 Dec 2022 16:26:07 -0500
Subject: [PATCH] Add RXCsum support + Add Txcsum offload support for xxv
 ethernet

---
 .../net/ethernet/xilinx/xilinx_axienet_main.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index 3742284ece9e..07566bc91b5d 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -1368,6 +1368,15 @@ int axienet_queue_xmit(struct sk_buff *skb,
 			cur_p->app0 |= 1;
 			cur_p->app1 = (csum_start_off << 16) | csum_index_off;
 		}
+	} else if (skb->ip_summed == CHECKSUM_PARTIAL && !lp->eth_hasnobuf &&
+			(lp->axienet_config->mactype == XAXIENET_10G_25G)) {
+		if (lp->features & XAE_FEATURE_PARTIAL_TX_CSUM) {
+			csum_start_off = skb_transport_offset(skb);
+			csum_index_off = csum_start_off + skb->csum_offset;
+			/* Tx Partial Checksum Offload Enabled */
+			cur_p->app1 |= 1 << 10;
+			cur_p->app3 = csum_start_off | (csum_index_off << 16);
+		}
 	} else if (skb->ip_summed == CHECKSUM_UNNECESSARY &&
 		   !lp->eth_hasnobuf &&
 		   (lp->axienet_config->mactype == XAXIENET_1G)) {
@@ -1583,6 +1592,14 @@ static int axienet_recv(struct net_device *ndev, int budget,
 			    csumstatus == XAE_IP_UDP_CSUM_VALIDATED) {
 				skb->ip_summed = CHECKSUM_UNNECESSARY;
 			}
+		} else if (lp->features & XAE_FEATURE_FULL_RX_CSUM &&
+			   (lp->axienet_config->mactype == XAXIENET_10G_25G) &&
+			   !lp->eth_hasnobuf) {
+			    csumstatus = (cur_p->app4 & 0x7);
+			    if ((csumstatus == XAE_IP_TCP_CSUM_VALIDATED) ||
+			       (csumstatus == XAE_IP_UDP_CSUM_VALIDATED)) {
+				skb->ip_summed = CHECKSUM_UNNECESSARY;
+			    }
 		} else if ((lp->features & XAE_FEATURE_PARTIAL_RX_CSUM) != 0 &&
 			   skb->protocol == htons(ETH_P_IP) &&
 			   skb->len > 64 && !lp->eth_hasnobuf &&
@@ -3280,11 +3297,13 @@ static int axienet_probe(struct platform_device *pdev)
 			lp->csum_offload_on_rx_path =
 				XAE_FEATURE_PARTIAL_RX_CSUM;
 			lp->features |= XAE_FEATURE_PARTIAL_RX_CSUM;
+			ndev->features |= NETIF_F_RXCSUM;
 			break;
 		case 2:
 			lp->csum_offload_on_rx_path =
 				XAE_FEATURE_FULL_RX_CSUM;
 			lp->features |= XAE_FEATURE_FULL_RX_CSUM;
+			ndev->features |= NETIF_F_RXCSUM;
 			break;
 		default:
 			lp->csum_offload_on_rx_path = XAE_NO_CSUM_OFFLOAD;
