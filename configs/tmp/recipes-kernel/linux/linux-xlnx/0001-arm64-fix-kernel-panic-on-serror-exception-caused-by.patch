From 2cc6b8c4b23b1392d8c90294eedbd90bdf752d18 Mon Sep 17 00:00:00 2001
From: Aleksei Greshilov <aleksei.greshilov@cern.ch>
Date: Tue, 17 Oct 2023 05:50:15 -0400
Subject: [PATCH] arm64: fix kernel panic on serror exception caused by user
 process

---
 arch/arm64/kernel/traps.c | 33 ++++++++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c
index fe0cd0568813..ef11079dc2d4 100644
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@ -935,15 +935,42 @@ bool arm64_is_fatal_ras_serror(struct pt_regs *regs, unsigned int esr)
 	case ESR_ELx_AET_UC:	/* Uncontainable or Uncategorized error */
 	default:
 		/* Error has been silently propagated */
-		arm64_serror_panic(regs, esr);
+		//arm64_serror_panic(regs, esr);
+
+		// HACK TO BE FIXED
+		unsigned long pc = instruction_pointer(regs);
+
+                //pr_crit("UserMode SError Exception on CPU%d, code 0x%08x %s\n",
+                //      smp_processor_id(), esr, esr_get_class_string(esr));
+
+                current->thread.fault_address = 0;
+                current->thread.fault_code = esr;
+
+                arm64_force_sig_fault(SIGBUS, BUS_ADRERR, pc,
+                        "Invalid Mem Access");
+
+		return false;
 	}
 }
 
 void do_serror(struct pt_regs *regs, unsigned int esr)
 {
 	/* non-RAS errors are not containable */
-	if (!arm64_is_ras_serror(esr) || arm64_is_fatal_ras_serror(regs, esr))
-		arm64_serror_panic(regs, esr);
+	if (!arm64_is_ras_serror(esr) || arm64_is_fatal_ras_serror(regs, esr)) {
+		//arm64_serror_panic(regs, esr);
+		
+		// HACK TO BE FIXED
+                unsigned long pc = instruction_pointer(regs);
+
+                //pr_crit("UserMode SError Exception on CPU%d, code 0x%08x %s\n",
+                //      smp_processor_id(), esr, esr_get_class_string(esr));
+
+                current->thread.fault_address = 0;
+                current->thread.fault_code = esr;
+
+                arm64_force_sig_fault(SIGBUS, BUS_ADRERR, pc,
+                        "Invalid Mem Access");
+	}
 }
 
 /* GENERIC_BUG traps */
