From b00d8f278bd6177aaafebccd903f8c8994c3552f Mon Sep 17 00:00:00 2001
From: Aleksei Greshilov <aleksei.greshilov@cern.ch>
Date: Tue, 10 Oct 2023 17:39:15 -0400
Subject: [PATCH] arm64: fix kernel panic on serror exception caused by user
 process

---
 arch/arm64/kernel/traps.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c
index fe0cd0568813..d04a051342dc 100644
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@ -941,6 +941,23 @@ bool arm64_is_fatal_ras_serror(struct pt_regs *regs, unsigned int esr)
 
 void do_serror(struct pt_regs *regs, unsigned int esr)
 {
+	if (user_mode(regs)) {
+		WARN_ON(regs != current_pt_regs());
+
+		unsigned long pc = instruction_pointer(regs);
+
+		pr_crit("UserMode SError Exception on CPU%d, code 0x%08x %s\n",
+			smp_processor_id(), esr, esr_get_class_string(esr));
+
+		current->thread.fault_address = 0;
+		current->thread.fault_code = esr;
+
+		arm64_force_sig_fault(SIGBUS, BUS_ADRERR, pc,
+			"Invalid Mem Access");
+
+		return;
+	}
+
 	/* non-RAS errors are not containable */
 	if (!arm64_is_ras_serror(esr) || arm64_is_fatal_ras_serror(regs, esr))
 		arm64_serror_panic(regs, esr);
